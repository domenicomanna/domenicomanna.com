---
import '../../global.css';
import Header from './header/header';
import Footer from './footer/footer';
import Container from '../ui/container/container';
import {
  localStorageThemeKey,
  Theme,
  syntaxHighlightingThemeMap,
  syntaxHighlightingThemeHtmlAttribute,
} from '../../constants/theme';

type Props = {
  title?: string;
  documentTitle?: string;
  maxWidth?: string;
  children: any;
};

const { title, maxWidth } = Astro.props;
const documentTitle = `${Astro.props.documentTitle ?? title} | Domenico Manna`;
const currentPath = Astro.url.pathname;
---

<script
  is:inline
  define:vars={{
    localStorageThemeKey,
    Theme,
    syntaxHighlightingThemeMap,
    syntaxHighlightingThemeHtmlAttribute,
  }}
>
  const getTheme = () => {
    if (localStorage.getItem(localStorageThemeKey)) {
      return localStorage.getItem(localStorageThemeKey);
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? Theme.Dark : Theme.Light;
  };

  const theme = getTheme();

  const documentElement = window.document.documentElement;
  const syntaxHighlightingTheme = syntaxHighlightingThemeMap[theme];
  documentElement.setAttribute(syntaxHighlightingThemeHtmlAttribute, syntaxHighlightingTheme);

  if (theme === Theme.Dark) {
    documentElement.classList.add(Theme.Dark);
  } else {
    documentElement.classList.remove(Theme.Dark);
  }
</script>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Personal website + blog" />
    <title>{documentTitle}</title>
  </head>
  <body style="display: flex; flex-direction: column; min-height: 100vh;">
    <Header currentPath={currentPath} maxWidth={maxWidth} client:load />
    <main style="margin: .25rem 0; flex: 1">
      <Container maxWidth={maxWidth}>
        {title && <h1 style="text-align: center; margin-bottom: .5rem;">{title}</h1>}
        <slot />
      </Container>
    </main>
    <Footer maxWidth={maxWidth} />
  </body>
</html>
